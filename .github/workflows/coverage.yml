name: Generate CodeCov Report

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4
        id: checkout_code

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: install cmake
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y cmake

      - name: setup pip
        run: python -m pip install --upgrade pip

      - name: install gcovr
        run: |
          python -m pip install gcovr

      - name: cache catch2
        id: cache-catch
        uses: actions/cache@v4
        with:
          path: ./Catch2
          key: ubuntu-latest-catch2-
          restore-keys: ubuntu-latest-catch2-

      - name: build catch2
        if: steps.cache-catch.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/catchorg/Catch2.git --depth 1
          cd Catch2
          cmake -Bbuild -H. -DBUILD_TESTING=OFF
          sudo cmake --build build/ --target install
          cd ..

      - name: install catch2
        run: |
          cd Catch2
          sudo cmake --build build/ --target install
          cd ..

      - name: Configure CMake
        run: cmake -B ${{github.workspace}} -DCMAKE_CXX_COMPILER=g++ -DCMAKE_CXX_FLAGS="--coverage -g -O0"

      - name: Build
        run: cmake --build ${{github.workspace}}

      - name: Test
        run: |
          ctest -C all --output-on-failure
          gcovr -e CMakeFiles --cobertura-pretty --cobertura coverage.xml
          cat coverage.xml

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
